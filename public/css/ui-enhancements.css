/* UI enhancements: reveal animations, skip link, focus styles, micro-interactions */
:root {
  --motion-duration-fast: 220ms;
  --motion-duration-medium: 420ms;
  --reveal-ease: cubic-bezier(0.2, 0.9, 0.2, 1);
}

/* Skip link for keyboard users */
.skip-link {
  position: absolute;
  left: 12px;
  top: 12px;
  background: rgba(0,0,0,0.7);
  color: var(--text-primary);
  padding: 8px 12px;
  border-radius: 8px;
  z-index: 9999;
  transform: translateY(-120%);
  transition: transform var(--motion-duration-fast) var(--reveal-ease);
}
.skip-link:focus {
  transform: translateY(0);
  outline: 2px solid var(--accent-azure);
}

/* Reveal utility - elements start hidden then fade/slide in */
.reveal {
  opacity: 0;
  transform: translateY(14px) scale(0.995);
  transition: opacity var(--motion-duration-medium) var(--reveal-ease),
    transform var(--motion-duration-medium) var(--reveal-ease);
  will-change: opacity, transform;
}
.reveal.is-visible {
  opacity: 1;
  transform: translateY(0) scale(1);
}

/* Stagger helper (apply to container to stagger children reveals)
   usage: add .reveal-stagger to a parent; children with .reveal will be delayed */
.reveal-stagger .reveal {
  transition-delay: 0ms;
}
.reveal-stagger .reveal.is-visible:nth-child(1) { transition-delay: 40ms; }
.reveal-stagger .reveal.is-visible:nth-child(2) { transition-delay: 80ms; }
.reveal-stagger .reveal.is-visible:nth-child(3) { transition-delay: 120ms; }
.reveal-stagger .reveal.is-visible:nth-child(4) { transition-delay: 160ms; }

/* Button micro-ripple (CSS-only) */
.btn.ripple { position: relative; overflow: hidden; }
.btn.ripple::after {
  content: '';
  position: absolute;
  width: 120px;
  height: 120px;
  background: rgba(255,255,255,0.12);
  border-radius: 999px;
  transform: scale(0);
  opacity: 0;
  transition: transform 420ms var(--reveal-ease), opacity 420ms var(--reveal-ease);
  pointer-events: none;
  left: 50%; top: 50%; transform-origin: center;
}
.btn.ripple:active::after { transform: scale(1); opacity: 1; transition: transform 160ms, opacity 320ms; }

/* Glass cards get an entrance lift effect */
.glass-card { transition: transform var(--motion-duration-fast), box-shadow var(--motion-duration-fast); }
.glass-card:hover { transform: translateY(-6px) scale(1.01); box-shadow: var(--shadow-hover); }

/* Respect user's reduced motion preference */
@media (prefers-reduced-motion: reduce) {
  .reveal, .btn::after, .glass-card, body::before, body::after { transition: none !important; animation: none !important; }
}
